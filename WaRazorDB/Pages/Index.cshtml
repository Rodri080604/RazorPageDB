@page
@model WaRazorDB.Pages.IndexModel

@{
    ViewData["Title"] = "Lista de Tareas";
}

<h1 class="mb-4">Lista de Tareas</h1>

<p>
    <a asp-page="Create" class="btn btn-success mb-3">➕ Nueva Tarea</a>
</p>

<!-- Selector de cantidad de tareas por página -->
<form method="get" class="mb-3 d-flex align-items-center">
    <label for="pageSize" class="me-2 fw-bold">Tareas por página:</label>
    <select id="pageSize" name="PageSize" class="form-select w-auto me-2" onchange="this.form.submit()">
        <option value="5" selected="@(Model.PageSize == 5)">5</option>
        <option value="10" selected="@(Model.PageSize == 10)">10</option>
        <option value="20" selected="@(Model.PageSize == 20)">20</option>
    </select>
    <input type="hidden" name="PageNumber" value="@Model.PageNumber" />
</form>

<table class="table table-striped table-hover shadow-sm rounded">
    <thead class="table-dark">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Tarea[0].nombreTarea)</th>
            <th>@Html.DisplayNameFor(model => model.Tarea[0].fechaVencimiento)</th>
            <th>@Html.DisplayNameFor(model => model.Tarea[0].estado)</th>
            <th>@Html.DisplayNameFor(model => model.Tarea[0].idUsuario)</th>
            <th class="text-center">Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Tarea)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.nombreTarea)</td>
                <td>@item.fechaVencimiento.ToString("dd/MM/yyyy")</td>
                <td>
                    <span class="badge
                         @(item.estado.ToLower() == "pendiente" ? "bg-warning text-dark" :
                                                          item.estado.ToLower() == "en curso" ? "bg-primary" :
                                                          item.estado.ToLower() == "finalizado" ? "bg-success" :
                                                          item.estado.ToLower() == "cancelado" ? "bg-danger" : "bg-secondary")">
                    @item.estado
                </span>
            </td>
            <td>@Html.DisplayFor(modelItem => item.idUsuario)</td>
            <td class="text-center">
                <a asp-page="./ChangeStatus" asp-route-id="@item.Id" asp-route-status="En curso"
                   class="btn btn-sm btn-primary me-1">▶ En curso</a>

                    <a asp-page="./ChangeStatus" asp-route-id="@item.Id" asp-route-status="Finalizado"
                       class="btn btn-sm btn-success me-1">✔ Completar</a>

                    <a asp-page="./ChangeStatus" asp-route-id="@item.Id" asp-route-status="Cancelado"
                       class="btn btn-sm btn-danger me-1">✖ Cancelar</a>

                    <a asp-page="./Edit" asp-route-id="@item.Id"
                       class="btn btn-sm btn-secondary">✏ Editar</a>
                </td>
            </tr>
                }
    </tbody>
</table>

<!-- Navegación de páginas -->
<nav>
    <ul class="pagination">
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" asp-route-PageNumber="@(Model.PageNumber - 1)" asp-route-PageSize="@Model.PageSize">Anterior</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-route-PageNumber="@i" asp-route-PageSize="@Model.PageSize">@i</a>
            </li>
        }

        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-route-PageNumber="@(Model.PageNumber + 1)" asp-route-PageSize="@Model.PageSize">Siguiente</a>
        </li>
    </ul>
</nav>
